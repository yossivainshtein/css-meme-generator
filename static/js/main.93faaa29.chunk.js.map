{"version":3,"sources":["images/Distracted-Boyfriend.jpeg","MemeInsertion.tsx","controls/InputWithLabel.js","models/MemeTemplate.ts","controls/EditableLabel.tsx","controls/CssEditor.tsx","MemeInsertionEditor.tsx","MemeEditor.tsx","MemeGenerator.tsx","index.js"],"names":["module","exports","observer","Object","fromEntries","this","props","tag","css","filter","is_active","map","prop","value","className","style","getStyle","text","React","Component","InputWithLabel","InputGroup","Prepend","Text","label","FormControl","type","onChange","name","placeholder","step","CssProp","makeAutoObservable","MemeTag","entries","boyfriendTemplate","image_url","tags","boyfriendImage","left","top","color","EditableLabel","spanRef","createRef","valueAtStartOfEditing","current","classList","toggle","select","innerText","undefined","onValueChange","event","key","blur","currentTarget","match","exec","num_str","units","diff","num","parseInt","preventDefault","onTabPressed","ref","onFocus","startEdit","onBlur","finishEdit","onInput","handleChange","width","length","textDecoration","onKeyDown","e","keyDownHandler","target","cssProp","index","CssPropEditor","onBlurInside","splice","onTabPressedOnValue","push","tabindex","defaultChecked","setText","downloadMemePreviewAsImage","memePreview","document","querySelector","html2canvas","then","canvas","toBlob","blob","fileName","link","createElement","download","href","URL","createObjectURL","click","revokeObjectURL","saveAs","src","template","alt","i","onClick","MemeGenerator","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.93faaa29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Distracted-Boyfriend.4ee61cd7.jpeg\";","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { WithMemeTag } from './models/MemeTemplate';\n\nexport default observer(\n    class MemeInsertion extends React.Component<WithMemeTag> {\n        private getStyle() {\n            return Object.fromEntries(this.props.tag.css.filter(({is_active}) => is_active).map(({prop, value}) => [prop, value]))\n        }\n\n        render() {\n            return <p className=\"memeInsertion\" style={ this.getStyle() }>{this.props.tag.text}</p>\n        }\n    }\n)","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\n\nexport default class InputWithLabel extends React.Component {\n    render() {\n        return <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n            <InputGroup.Text>{this.props.label}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl type={this.props.type} \n                     value={this.props.value} \n                     onChange={this.props.onChange} \n                     name={this.props.name} \n                     placeholder={this.props.placeholder} step={this.props.step}/>\n      </InputGroup>\n    }\n}","import { makeAutoObservable } from \"mobx\"\nimport boyfriendImage from '../images/Distracted-Boyfriend.jpeg'\nexport class CssProp {\n    \n    public prop: string\n    public value: string\n    public is_active: boolean\n\n    constructor(prop: string, value: string) {\n        makeAutoObservable(this)\n        this.prop = prop\n        this.value = value\n        this.is_active = true\n    }\n}\n\nexport class MemeTag {\n    text: string\n    css: Array<CssProp>\n\n    constructor(text: string, style: React.CSSProperties) {\n        makeAutoObservable(this)\n        this.text = text\n        this.css = Object.entries(style).map(([prop, value]) => new CssProp(prop, value))\n    }\n\n    setText(text: string) {\n        this.text = text\n    }\n}\n\nexport class MemeTemplate {\n    image_url: string\n    tags: MemeTag[]\n\n    constructor(image_url: string, tags: MemeTag[]) {\n        makeAutoObservable(this)\n\n        this.image_url = image_url\n        this.tags = tags\n    }\n}\n\nexport const boyfriendTemplate = new MemeTemplate(boyfriendImage, \n    [\n        new MemeTag('usa', { left: '23%', top: '72%' }),\n        new MemeTag('corona virus', { left: '47%', top: '50%' }),\n        new MemeTag('china', {  left : '75%', top: '65%' ,color: 'red'}),\n    ]\n)\n \n\nexport interface WithMemeTemplate {\n    template: MemeTemplate\n}\n\nexport interface WithMemeTag {\n    tag: MemeTag\n}\n  ","import React from 'react';\n\ninterface EditableLabelProps {\n    value: string\n    is_active: boolean\n    onValueChange: (value: string) => void\n    onTabPressed?: () => void\n}\nexport default class EditableLabel extends React.Component<EditableLabelProps> {\n    private spanRef = React.createRef<HTMLInputElement>()\n    private valueAtStartOfEditing: string | null = null\n\n    startEdit() {\n        this.spanRef?.current?.classList.toggle('edit')\n        this.spanRef?.current?.select()\n        this.valueAtStartOfEditing = this.props.value\n    }\n\n    handleChange() {\n        const value = this.spanRef?.current?.innerText\n        if (value !== undefined && value !== null) {\n            this.props.onValueChange(value)\n        }\n    }\n\n    finishEdit() {\n        this.spanRef?.current?.classList.toggle('edit')        \n    }\n\n    keyDownHandler(event: React.KeyboardEvent<HTMLInputElement>) {\n        const key = event.key\n        switch(key) {\n            case \"Escape\":\n                this.valueAtStartOfEditing && this.props.onValueChange(this.valueAtStartOfEditing)\n                this.spanRef?.current?.blur()\n                break;\n            case \"Enter\":\n                this.spanRef?.current?.blur()\n                break;\n            case \"ArrowUp\":\n            case \"ArrowDown\":\n                const value = event.currentTarget.value\n                const match = /(\\d+)(\\%)/g.exec(value)\n                if (match) {\n                    let [_, num_str, units] = match\n                    let diff = key === 'ArrowUp' ? +1 : -1\n                    let num = parseInt(num_str)\n                    num += diff\n                    this.props.onValueChange('' + num + units)\n                }\n                event.preventDefault()\n                break;\n            case \"Tab\":\n                this.props.onTabPressed?.()\n                break\n        }\n    }\n\n    render() {\n        return (<input \n                  ref={this.spanRef} \n                  className=\"cssLabel\" \n                  onFocus={ () => this.startEdit() }\n                  onBlur={ () => this.finishEdit() }\n                  onInput= { () => this.handleChange() } \n                  value = { this.props.value }\n                  style = {{\n                    width: `${this.props.value.length}ch`,\n                    ...(!this.props.is_active && {textDecoration: 'line-through'})\n                  }}\n                  onKeyDown = { (e) => this.keyDownHandler(e) }\n                  onChange = { (e) => this.props.onValueChange(e.target.value)}\n                 /> \n                \n                )\n            \n\n    }\n}","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { CssProp } from '../models/MemeTemplate';\nimport EditableLabel from './EditableLabel'\n\n\ninterface CssEditorProps {\n    css: Array<CssProp>\n}\nexport default observer(\n    class CssEditor extends React.Component<CssEditorProps> {\n        render() {\n            return (  \n                <p className=\"cssEditor\">\n                    { \n                        this.props.css.map((cssProp, index) => <CssPropEditor {...{\n                            cssProp,\n                            onBlurInside: () => {\n                                if (cssProp.prop === '' && cssProp.value === '') {\n                                    this.props.css.splice(index, 1)\n                                }\n                            },\n                            ...(index === this.props.css.length - 1 && { onTabPressedOnValue: () => { this.props.css.push(new CssProp('', '')) }})\n                        }} />)\n                    }           \n                </p>\n        )}\n    })\n\ninterface CssPropEditorProps {\n    cssProp: CssProp\n    onTabPressedOnValue?: () => void\n    onBlurInside: () => void\n}\nconst CssPropEditor = observer(class CssPropEditorInner extends React.Component<CssPropEditorProps> {\n    render() {\n        return (<div className=\"cssValueContainerBox\" onBlur={(e) => { this.props.onBlurInside() }}>\n                    <input {...{\n                        tabindex: 0,\n                        className: 'cssPropertyCheckbox',\n                        type: \"checkbox\",\n                        defaultChecked: this.props.cssProp.is_active,\n                        onChange: () => {\n                            this.props.cssProp.is_active = !this.props.cssProp.is_active\n                        }\n                    }}/>\n                    <EditableLabel \n                        is_active={this.props.cssProp.is_active}\n                        value={this.props.cssProp.prop} \n                        onValueChange={(value: string) => { this.props.cssProp.prop = value }}/>\n                    :\n                    <EditableLabel \n                        value={this.props.cssProp.value} \n                        is_active={this.props.cssProp.is_active}\n                        onTabPressed={this.props.onTabPressedOnValue}\n                        onValueChange={(value: string) => { this.props.cssProp.value = value }}/>\n                </div>)\n            }\n})\n    ","import React, { ChangeEvent } from 'react';\nimport InputWithLabel from './controls/InputWithLabel'\nimport CssEditor from './controls/CssEditor'\nimport { WithMemeTag } from './models/MemeTemplate';\nimport { observer } from 'mobx-react';\n\ninterface MemeInsertionEditorProps extends WithMemeTag {\n    index: number\n}\nexport default observer(class MemeInsertionEditor extends React.Component<MemeInsertionEditorProps> {\n    render() {\n        return (  \n        <div>\n            <InputWithLabel \n                label={ \"Text #\" + (this.props.index+1) } \n                value={ this.props.tag.text } \n                onChange= { (e: ChangeEvent<HTMLInputElement>) => this.props.tag.setText(e.target.value) }/>\n            <CssEditor css={ this.props.tag.css }/>\n        </div>\n    )}\n})","import { observer } from 'mobx-react';\nimport React from 'react';\nimport MemeInsertion from './MemeInsertion'\nimport MemeInsertionEditor from './MemeInsertionEditor'\nimport { WithMemeTemplate } from './models/MemeTemplate';\nimport html2canvas from 'html2canvas';\n\nfunction saveAs(blob: any, fileName=\"pic\") {\n  const link = document.createElement('a');\n  link.download = fileName\n  link.href = URL.createObjectURL(blob);\n  link.click();\n  URL.revokeObjectURL(link.href);\n}\n\n\nconst downloadMemePreviewAsImage = () => {\n  const memePreview = document.querySelector('.memePreview')\n  if (memePreview) {\n    html2canvas(memePreview as HTMLElement, {}).then(canvas => {\n      canvas.toBlob(blob => saveAs(blob, 'meme'))\n    })\n  }\n}\n\nexport default observer(\n  class MemeEditor extends React.Component<WithMemeTemplate> {\n    render() {\n      return  (\n        <div className=\"memeEditor\">\n          <div className=\"memeLeftColumn\">\n            <div className=\"memePreview\">\n              <img className=\"memeImage\" src={this.props.template.image_url} alt=\"memeImage\"/>\n              { this.props.template.tags.map((tag, i) => <MemeInsertion key={i} tag={tag} />) }\n            </div>\n            <button className=\"saveButton btn btn-primary\" onClick={downloadMemePreviewAsImage}>Download Image</button>\n          </div>\n          <div className=\"insertionEditor\">\n            { this.props.template.tags.map((tag, i) => <MemeInsertionEditor index={i} tag={tag} />) }\n          </div>\n        </div>\n      );\n    }\n  }\n)","import React from 'react';\nimport MemeEditor from './MemeEditor'\nimport { boyfriendTemplate } from './models/MemeTemplate'\n\nexport default class MemeGenerator extends React.Component {    \n    render() {\n        return (\n          <div className=\"container\">\n            <header className=\"header\">Meme generator with CSS</header>\n            <MemeEditor template={ boyfriendTemplate }/>\n            <footer className=\"footer\">footer</footer>\n          </div>\n        );\n      }\n    }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport MemeGenerator from './MemeGenerator'\n\n\n\nReactDOM.render(\n    <MemeGenerator/>,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}